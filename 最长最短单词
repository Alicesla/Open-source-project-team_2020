描述
输入1行句子（不多于200个单词，每个单词长度不超过100），只包含字母、空格和逗号。单词由至少一个连续的字母构成，空格和逗号都是单词间的间隔。

试输出第1个最长的单词和第1个最短单词。

输入
一行句子。
输出
两行输出：
第1行，第一个最长的单词。
第2行，第一个最短的单词。

代码
#include <iostream>
#include <cstdio> 
#define LEN 100
using namespace std;
int main(){
	char c;
	int Short=LEN+10,Long=0,word_len=0;//Short用于记录最短单词长度，Long用于记录最长单词长度，word_len用于记录扫描到的单词长度 
	char Shortest[LEN+10],Longest[LEN+10],word[LEN+10];//Shortest用于存放最短单词，Longest用于存放最长单词，word用于存放扫描到的单词
	while(scanf("%c",&c)!=EOF){//逐个输入整个句子并进行单词长度的比较 
		if(c!=' '&&c!=','){//仍是同一个单词的一部分 
			word[word_len++]=c;
		}
		else {
			word[word_len]=0; 
			if(word_len<Short) {
				Short=word_len;
				for(int j=0;j<word_len+1;j++)
					Shortest[j]=word[j];
			}
			if(word_len>Long) {
				Long=word_len;
				for(int j=0;j<word_len+1;j++)
					Longest[j]=word[j];
			}
			word_len=0;
		}
	}
	//比较最后一个输入的单词
	if(word_len<Short) {
		for(int j=0;j<word_len;j++)
			Shortest[j]=word[j];
		Shortest[word_len]=0;
	}
	if(word_len>Long) {
		for(int j=0;j<word_len;j++)
			Longest[j]=word[j];
		Longest[word_len]=0;
    }
	printf("%s\n%s",Longest,Shortest);
	return 0; 
}
