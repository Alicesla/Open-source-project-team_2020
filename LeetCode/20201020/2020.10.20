/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        ListNode *p =head;
        ListNode *q=p;
        int count =0;
        while (p){
            count ++;//记录节点个数
            p=p->next;
        }
        if (count<=2) return ;
        int i=0;
        p=head;
        while (i<count/2){
            i++;p=p->next;//p的位置是将要改变的节点的位置
        }
        //旋转p后面的节点
        q=p->next;
        while (q->next){
            ListNode *w=q->next;
            q->next=w->next;
            w->next=p->next;
            p->next=w;
        }
        //旋转完成后插入到前面的节点之间就ok啦
        q=head;
        while(p->next){
            ListNode *a=p->next;
            p->next=a->next;
            a->next=q->next;
            q->next=a;
            q=a->next;
        }
    }
};
