/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        ListNode*odd=head;
        if(!head||!(head->next)) return head;
        ListNode*even=head->next;
        ListNode*nexthead=head->next;
        while(odd->next!=0&&odd->next->next!=0||even->next!=0&&even->next->next!=0)
        {   
            if(odd->next!=0&&odd->next->next!=0)
           { odd->next=odd->next->next;
            odd=odd->next;}
            if(even->next!=0&&even->next->next!=0)
           { even->next=even->next->next;
            even=even->next;}
        }
        odd->next=nexthead;even->next=NULL;
        return head;
    }
};
