class Solution {
public:
    
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        //在t1上直接改
        if(t1==NULL && t2==NULL) return NULL;
        if(t1==NULL) return t2; 
        if(t2==NULL) return t1;
        t1->val += t2->val;
        t1->left=mergeTrees(t1->left,t2->left);
        t1->right=mergeTrees(t1->right,t2->right);
        return t1;
        
    }
};


class Solution {
public:
    
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        //新建一棵树
        if(t1==NULL && t2==NULL) return NULL;
        if(t1==NULL) return t2; 
        if(t2==NULL) return t1;        
        TreeNode* node=new TreeNode(t1->val + t2->val);
        node->left=mergeTrees(t1->left, t2->left);
        node->right=mergeTrees(t1->right, t2->right);
        return node;
    }
};
