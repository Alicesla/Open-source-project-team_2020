/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        TreeNode *p=root;
        stack<TreeNode*>s;
        vector <int>vec;
        if (!p) return vec;
        s.push(p);
        vec.push_back(p->val);
        p=p->left;
        while (p){
            vec.push_back(p->val);
            s.push(p);
            p=p->left;
        }
        while (!s.empty()){
            p=s.top();
            s.pop();

            if (p->right){
                s.push(p->right);
                vec.push_back(p->right->val);
                p=p->right;
                while (p->left){
                    s.push(p->left);
                     vec.push_back(p->left->val);p=p->left;
                }
            }
        }
        return vec;
    }
};
