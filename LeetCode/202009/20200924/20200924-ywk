class Solution {
public:
    map<int,int> m;
    void InOrder(TreeNode* root, map<int,int> &myMap)
    {
        if (root == NULL)
        {
            return;
        }
        if(root->left != NULL)
        {
            InOrder(root->left,myMap);
        }
        if(myMap.find(root->val) != myMap.end())
        {
            myMap[root->val]++;
        }
        else
        {
            myMap[root->val] = 1;
        }
        if(root->right != NULL)
        {
            InOrder(root->right,myMap);
        }
    }
    vector<int> findMode(TreeNode* root) {
        vector<int> t;
        int maxCount = 0;
        InOrder(root,m);
        map<int, int>::iterator iter = m.begin();
        while(iter != m.end())
        {
            if(iter->second > maxCount)
            {
                t.clear();
                t.push_back(iter->first);
                maxCount = iter->second;
            }
            else if(iter->second == maxCount)
            {
                t.push_back(iter->first);
            }
            iter++;
        }
        return t;
        
    }
};