class Solution {
public:
    int baohan (vector <int> a,vector<int>b){
        if (a[0]<=b[0]&&a[1]>=b[1]) return 1;
        else if(a[0]>=b[0]&&a[1]<=b[1]) return 0;
        else return -1;
    }
    int baohan_1(vector<int>a,vector<int>b,vector<int>c){
        if (c[0]>a[1]) return 0;
        return 1;
    }
    void cachu(vector<vector<int >>& clips){
        for (int i=0;i<clips.size();){
            if (clips[i][0]==0&&clips[i][1]==0){
                clips.erase(clips.begin()+i);
            }
            else i++;
        }
    }
    int videoStitching(vector<vector<int>>& clips, int T) {
        vector<int>a;vector<int>b;
        for (int i=0;i<clips.size()-1;i++){
            for (int j=i+1;j<clips.size();j++){
                if (clips[j][0]!=0||clips[j][1]!=0) {
                    int x=baohan(clips[i],clips[j]);
                    if (x==0){clips[i][0]=0;clips[i][1]=0;}
                    if (x==1){clips[j][0]=0;clips[j][1]=0;}
                }
            }
        }
        int min_index;
        for (int i=0;i<clips.size()-1;i++){
            min_index=i;
            if (clips[i][0]==0&&clips[i][1]==0) continue;
            for (int j=i+1;j<clips.size();j++){
                if (clips[j][0]==0&&clips[j][1]==0) continue;
                if (clips[min_index][0]>=clips[j][0]){
                    min_index=j;
                }
            }
            swap(clips[i],clips[min_index]);
            
        }

        cachu(clips);
        
        if (clips[0][0]!=0||clips[clips.size()-1][1]<T) return -1; 
        for (int i=0;i<clips.size()-2;i++){                
            for (int j=i;j<clips.size()-2;j++){
                if (baohan_1(clips[j],clips[j+1],clips[j+2])){
                    //cout<<j+1<<endl;                    
                    clips[j+1][0]=0;
                    clips[j+1][1]=0;
                    cachu(clips);
                    i--;
                    break;
                }
            }
        }
        for (int i=0;i<clips.size();i++){
            if (clips[i][1]>=T) return i+1;
            if (i+1<clips.size()){
                if (clips[i][1]<clips[i+1][0]) return -1;
            }
        }
        

        return clips.size();
    }
};
