/*
1002. 查找常用字符
给定仅有小写字母组成的字符串数组 A，返回列表中的每个字符串中都显示的全部字符（包括重复字符）组成的列表。例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。
你可以按任意顺序返回答案。
 
示例 1：
输入：["bella","label","roller"]
输出：["e","l","l"]

示例 2：
输入：["cool","lock","cook"]
输出：["c","o"]

1 <= A.length <= 100
1 <= A[i].length <= 100
A[i][j]是小写字母
*/


//创建两个vector数组，一个用于计数每个字符串中每个字符出现的次数，每到下一个字符串，此数组重新初始化为全0；另一个用于存储所有字符串中每个字符出现的最少次数
class Solution {
public:
    vector<string> commonChars(vector<string>& A) {
        //用于存储所有字符串中每个字符出现的最少次数
        vector<int> minfreq(26, INT_MAX);
        //计数每个字符串中每个字符出现的次数
        vector<int> freq(26);
        for (auto word: A) {
            //在循环开始重新初始化为全0，使用fill函数
            fill(freq.begin(), freq.end(), 0);
            for (char ch: word) {
                freq[ch - 'a']++;
            }
            for (int i = 0; i < 26; i++) {
                minfreq[i] = min(minfreq[i], freq[i]);
            }
        }
        vector<string> ans;
        for (int i = 0; i < 26; ++i) {
            for (int j = 0; j < minfreq[i]; ++j) {
            //此处压入不能简单使用push_back，因为类型不同（将char类型压入string数组），需要用emplace_back，括号内的第一个参数为每个字符压入的次数
                ans.emplace_back(1,i + 'a');
            }
        }
        return ans;
    }
};
