/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        ListNode *p=head;
        if (!head) return head;
        ListNode *t;
        ListNode *q=p->next;
        int count =2;
        while(q){
            if (count%2==0){
                if(q->next){
                    t=q->next;
                    q->next=t->next;
                    t->next=p->next;
                    p->next=t;
                    p=t;
                }   
                else q=q->next;             
            }
            else{
                q=q->next;
            }
            count++;
        }
        return head;
    }
};
