/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
//迭代法
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        ListNode*rear=NULL;
        ListNode*cur=head;
        ListNode*ptr=NULL;
        if(!head||!(head->next)) return head;
        ListNode*new_node=head->next;
        while(cur&&cur->next)
        {
          rear=cur->next->next;
          if(ptr)
          ptr->next=cur->next;
          ptr=cur;
          cur->next->next=cur;
          cur->next=rear;
          
          cur=rear;
        }
        return new_node;
    }
};
//递归法
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if (head == nullptr || head->next == nullptr) {
            return head;
        }
        ListNode* newHead = head->next;
        head->next = swapPairs(newHead->next);
        newHead->next = head;
        return newHead;
    }
};

