class Solution {
public:
    //好像斗地主！
    bool isPossible(vector<int>& nums) {
        if(nums.size()<3) return false;

        int count=nums.size();
        vector<int>v;
        vector<vector<int>>vec;
        v.push_back(nums[0]);
        v.push_back(1);
        vec.push_back(v);
        for(int i=1;i<nums.size();i++){
            if (nums[i]==vec[vec.size()-1][0])
                vec[vec.size()-1][1]++;
            else{
                v[0]=nums[i];
                v[1]=1;
                vec.push_back(v);
            }
        }
        int shou=0;
        int shou_index=0;
        while(count>=3){
            int temp=0;
            for (int i=0;i<vec.size();i++){
                if (vec[i][1]!=0) {
                    shou=vec[i][0];
                    shou_index=i;
                    count--;
                    vec[i][1]--;
                    temp=1;
                    break;
                }
            }
            for (int i=shou_index+1;i<vec.size();i++){
                if (vec[i][0]==vec[i-1][0]+1 ){
                    if (vec[i][1]>vec[i-1][1]){
                        count--;temp++;vec[i][1]--;
                    }else if (temp>=3&&vec[i][1]<=vec[i-1][1]) {  
                        break;
                    }else{
                        return false;
                    }
                }
                else {
                    if (temp>=3) break;
                    else return false;
                }
            }
        }
        if (count!=0) return false;
        return true;
    }
};
