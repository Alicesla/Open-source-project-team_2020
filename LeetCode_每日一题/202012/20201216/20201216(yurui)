class Solution {
public:
    bool wordPattern(string pattern, string s) {
     unordered_map<char,string> mp;
     unordered_map<string,char> str2ch;
     int n=pattern.size();
     int m=s.size();
     int pos=0;
     for(int i=0;i<n;i++)
     {   
         if(pos>m) return false;
         int j=pos;
         while(j<m&&s[j]!=' ') j++;
         string subs=s.substr(pos,j-pos);
         if(mp.count(pattern[i])>=1)
         {
             if(mp[pattern[i]]!=subs)
              return false;
         }
         if(str2ch.count(subs)>=1)
         {
             if(str2ch[subs]!=pattern[i])
              return false;
         } 
         mp[pattern[i]]=subs;
         str2ch[subs]=pattern[i];
         pos=j+1;
     }
     return pos>m;
    }
};
