class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int K) {
        
    priority_queue<pair<int,int>> q;
    int n=points.size();
    vector<vector<int>> res;
    if(K==0) return res;
    for(int i=0;i<K;i++)
     { int tem=points[i][0]*points[i][0]+points[i][1]*points[i][1];
       q.push({tem,i});
     }
     for(int i=K;i<n;i++)
     {   int tem=points[i][0]*points[i][0]+points[i][1]*points[i][1];
         if(tem<q.top().first)
         {
             q.pop();
             q.push({tem,i});
         }
     }
     for(int i=0;i<K;i++)
       {
           res.push_back(points[q.top().second]);
           q.pop();
       }
       return res;
    }
};
    
