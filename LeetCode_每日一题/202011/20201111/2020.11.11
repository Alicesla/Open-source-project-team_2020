class Solution {
public:
    int findRotateSteps(string ring, string key) {
        vector<string>vec;
        vector<string>vec_1;
        vec.push_back(ring);
        map<string,int>mp;
        map<string,int>mp_1;
        mp[ring]=0;
        int count =999;
        int len=ring.size();
        for (int i=0;i<key.size();i++){
            mp_1.clear();
            for (int k=0;k<vec.size();k++){
                ring=vec[k];
                vec_1.clear();
                for (int j=0;j<len;j++){
                    if (ring[j]==key[i]) {
                        string str=ring.substr(j)+ring.substr(0,j);
                        vec_1.push_back(str);
                        int m=min(len-j,j);
                        m+=mp[ring];
                        if (mp_1.count(str)==0) mp_1[str]=m;
                        else mp_1[str]=min(mp_1[str],m);
                        //cout<<j<<ring<<mp[ring]<<str<<mp_1[str]<<endl;
                        if (i==key.size()-1){
                            count=min(count,mp_1[str]);
                        }
                    }
                }
            }
            vec.clear();
            vec=vec_1;
            mp.clear();
            mp=mp_1;
        }
        
        return count+key.size();
    }
};
