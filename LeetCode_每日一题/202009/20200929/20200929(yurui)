/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
   
public:
    vector<int> postorderTraversal(TreeNode* root) {
        stack<TreeNode*> temval;
        vector<int> res;
        if(root==NULL) return res;
        temval.push(root);
        TreeNode* p=root;
        TreeNode*r=NULL;
        while(p||!temval.empty())
        {
           if(p)
           {
               temval.push(p);
               p=p->left;
           }
           
           else
           {   p=temval.top();
              if(p->right&&p->right!=r)
              p=p->right;
              else
              {
                     r=temval.top();
                     res.push_back(r->val);
                     temval.pop();
                     p=NULL;
              }
          
           }
       
        
        }
        return res;
    }
   
};
